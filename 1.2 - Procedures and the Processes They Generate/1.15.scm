#lang sicp

; Exercise 1.15:
; ==============
; e sine of an angle (specified in radians) can be computed by making use of
; the approximation sin x ≈ x if x is sufficiently small, and the trigonometric
; identity sin x = 3 sin(x/3) + 4 sin^3(x/3)to reduce the size of the argument
; of sin. (For purposes of this exercise an angle is considered "sufficiently
; small" if its magnitude is not greater than 0.1 radians.) ese ideas are
; incorporated in the following procedures:

(define (cube x) (* x x x))
(define (p x) (- (* 3 x) (* 4 (cube x))))
(define (sine angle)
  (if (<= (abs angle) 0.1)
      angle
      (p (sine (/ angle 3.0)))))

; a. How many times is the procedure p applied when (sine 12.15) is evaluated?
; b. What is the order of growth in space and number of steps (as a function of
;    angle) used by the process generated by the sine procedure when
;    (sine angle) is evaluated?


; a. The procedure p is applied 5 times.

    (sine 12.15)
    (p (sine 4.05))
    (p (p (sine 1.35)))
    (p (p (p (sine 0.45))))
    (p (p (p (p (sine 0.15)))))
    (p (p (p (p (p (sine 0.05))))))

; b. We can see the computation performs repeated divisions of the angle a until
;    the angle is smaller than 0.1. That means a/(3^x) < 0.1, where x indicates
;    the number of divisions performed. Now we need to specify x in terms of a:
;    
;    a/(3^x) < 0.1
;    a < 0.1 * 3^x
;    10a < 3^x
;    x = log3(10a)
;
;    The number of steps required is logarithmic - O(log a).
;    The order of growth of needed space is logarithmic too. As we can see
;    above, the recursive process first needs to recursively evaluete the
;    argument to p before applying the function.
